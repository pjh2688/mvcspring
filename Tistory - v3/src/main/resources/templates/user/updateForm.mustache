{{>/layout/main-header}}

<input type="hidden" id="principalId" value="{{principal.id}}">

<div class="container">
    <div class="my_auth_box">
        <div class="my_auth_form_box">
            <div class="d-flex justify-content-center">
			{{#principal}}
            	<form id="userProfileImageForm">
                    <input type="file" class="my_hidden" id="profile-img-input" name="profileImageFile" />
                </form>
       		{{#principal.profileImageUrl}}
                <img src="/upload/{{principal.profileImageUrl}}" class="my_profile_rounded_img_btn_lg" id="userProfileImage" onclick="profileImageUpload({{pageOwnerId}}, {{principal.id}});">
            {{/principal.profileImageUrl}}
            
            {{^principal.profileImageUrl}}
                <img src="/tistory/images/dog.jpg" class="my_profile_rounded_img_btn_lg" id="userProfileImage" onclick="profileImageUpload({{pageOwnerId}}, {{principal.id}});">
            {{/principal.profileImageUrl}} 
             
        	{{/principal}}
            </div>
            <div class="my_error_box my_hidden"></div>
            <!-- 수정은 put 요청 fetch 사용해야함 -->
            <form id="userUpdateForm" onsubmit="updateProfile({{principal.id}}, event);">
                <input id="username" name="username" class="my_auth_form_box_input" type="text" placeholder="유저네임" maxlength="20" value="{{principal.username}}" required readonly />
                <input id="password" name="password" class="my_auth_form_box_input" type="password" placeholder="현재 비밀번호" maxlength="20" required />
                <input id="convertPassword" name="convertPassword" class="my_auth_form_box_input" type="password" placeholder="변경할 비밀번호" maxlength="20" required />
                <input id="convertPassword_chk" name="convertPassword_chk" class="my_auth_form_box_input" type="password" placeholder="변경할 비밀번호 확인" maxlength="20" required />
                <input id="email" name="email" class="my_auth_form_box_input" type="email" placeholder="이메일" maxlength="60" value="{{principal.email}}" required readonly />
                <button class="my_secondary_btn">회원정보수정</button>
            </form>
            
        </div>
    </div>
    <br />
</div>
<script src="/tistory/js/jquery.min.js"></script>
<script>
	
	$(document).ready(function(){
		
		
	
	});
	
	function profileImageUpload(pageOwnerId, principalId) {
	
		console.log(pageOwnerId, principalId);
		
		if(pageOwnerId != principalId) {
			alert("프로필 사진을 수정할 수 없는 유저입니다.")
			return;
		}
		
		$("#profile-img-input").click();
		
		$("#profile-img-input").on("change", (e) => {
			let f = e.target.files[0];
			
			if(!f.type.match("image.*")) {
				alert("이미지를 등록해야 합니다.");
				return;
			}
			
			let profileImageForm = $("#userProfileImageForm")[0];
			let formData = new FormData(profileImageForm);
			
			$.ajax({
				type: "put",
				url: "/api/user/" + principalId + "/profileImageUrl",
				data: formData,
				contentType: false, // 필수 : x-www-form-urlencoded로 파싱되는 것을 방지
				processData: false, // 필수 : contentType을 false로 줬을 때 QueryString 자동 설정되는 거 해제.
				enctype: "multipart/form-data",
				dataType: "json",
				success: function(res) { 
					let reader = new FileReader();
					reader.onload = (e) => {
						$("#userProfileImage").attr("src", e.target.result);
					}
					reader.readAsDataURL(f);	
					
					location.reload();
					
				},
				error: function(error) {  
					console.log(error);

					if(error.responseJSON.code == -1) {
						alert(error.responseJSON.data);
						location.reload();
						
					}	
					
				}
			});
		
		});
		
    }
	
	function updateProfile(principalId, event) {
		event.preventDefault();
		
		var url = `/api/user/${principalId}`;
		
		var convertPassword = $("#convertPassword").val();
		var convertPassword_chk = $("#convertPassword_chk").val();
		
		if(convertPassword == convertPassword_chk) {
			let data = $("#userUpdateForm").serialize();
			
			$.ajax({
				type: "PUT",
				url: url,
				data: data,
				contentType: "application/x-www-form-urlencoded; charset=utf-8",
				dataType: "json",  
				success: function(result, status) {  // 1-2.httpStatus가 200번대 일때
					console.log("update 성공", result);
				
					location.href=`/user/${principalId}`;
				},
				error: function(error, status) { // 1-3. httpstatus가 200번대가 아닐 때
					console.log("update 실패", error);
				
					if(error.responseJSON.data == null) {
						alert(error.responseJSON.message);
					} else {
						alert(JSON.stringify(error.responseJSON.data));	
					}
				}
			});
		} else {
			alert("변경할 비밀번호가 일치하지 않습니다.");
			return;
		}
		
	}
	
	
</script>
{{>/layout/footer}}